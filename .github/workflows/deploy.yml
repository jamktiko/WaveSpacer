name: Deploy to AWS

on:
  push:
    branches:
      - feature/awsConnection   # my√∂hemmin vaihdat main

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Build frontend
        working-directory: frontend
        run: |
          npm install
          npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: eu-north-1

      - name: Sync build to S3
        run: |
          aws s3 sync frontend/dist s3://playlist-cleaner-frontend-dev --delete

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CF_DISTRIBUTION_ID }} \
            --paths "/*"

  deploy-backend:
    runs-on: ubuntu-latest
    needs: deploy-frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: eu-north-1

      - name: Deploy backend to EC2 via SSM
        run: |
          INSTANCE_ID=$(aws ec2 describe-instances \
            --filters "Name=tag:Name,Values=playlist-cleaner-api-dev" \
            --query "Reservations[].Instances[].InstanceId" \
            --output text)

          echo "Deploying to EC2 instance: $INSTANCE_ID"

          aws ssm send-command \
            --targets "Key=instanceIds,Values=$INSTANCE_ID" \
            --document-name "AWS-RunShellScript" \
            --comment "Deploy backend update" \
            --parameters 'commands=[
              "set -e",
              "cd /opt/app || mkdir -p /opt/app && cd /opt/app",
              "if [ ! -d .git ]; then git clone https://github.com/${GITHUB_REPOSITORY}.git .; fi",
              "git fetch --all",
              "git checkout feature/awsConnection",
              "git pull origin feature/awsConnection",
              "cd backend",
              "npm install",
              "pm2 restart all || pm2 start server.js --name backend"
            ]'
